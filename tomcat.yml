---
- name: installing tomcat on Centos 7 and ubuntu 20
  hosts: all
  become: yes  
  tasks:
    - name: installing java 
      ansible.builtin.yum:
        update_cache: yes
        name: java-1.8.0-openjdk-devel
        state: present
      when: ansible_facts['distribution'] == "CentOS"
    - name: installing java 
      ansible.builtin.apt:
        update_cache: yes
        name: openjdk-11-jdk
        state: present  
      when: ansible_facts['distribution'] == "Ubuntu"
    - name: add tomcat user with group name tomcat
      ansible.builtin.user:
        name: "{{ tomcat_user }}"
        comment: tomcat usr
        shell: "{{ tomcat_shell }}"
        home: "{{ tomcat_home }}"
    - name: check if the tomcat directory present
      ansible.builtin.stat:
        path: "{{ tomcat_file_check }}"
      register: tomcat_file_present  
    - name: Dowload and untar
      ansible.builtin.unarchive:
        src: "https://archive.apache.org/dist/tomcat/tomcat-9/v{{tomcat_download_version}}/bin/apache-tomcat-{{tomcat_download_version}}.tar.gz"
        dest: "{{ tomcat_home }}"
        remote_src: yes
    - name: create the soft link to tomcat dir
      ansible.builtin.file:
        src: "{{ tomcat_home }}/apache-tomcat-{{tomcat_download_version}}"
        dest: "{{ tomcat_home }}/latest"
        state: link
      when: not tomcat_file_present.stat.exists
    - name: change the tomcat dir owner permission
      ansible.builtin.file:
        path: "{{ tomcat_home }}"
        recurse: yes
        state: directory
        owner: "{{ tomcat_user }}"
      when: not tomcat_file_present.stat.exists  
    - name: find the .sh files on the path 
      find:
        paths: "{{ tomcat_home }}/latest/bin"
        patterns: "*.sh"
      register: output
    - set_fact:
        tomcat_executes: "{{ output.files | map(attribute='path') | list}}"
      when: not tomcat_file_present.stat.exists
    - name: change the file permission
      ansible.builtin.file:
        src: "{{ item }}"
        path: "{{ tomcat_home }}/latest/bin"
        mode: 0751
      with_items: "{{tomcat_executes}}"
      when: not tomcat_file_present.stat.exists
    - name: creating the service file
      ansible.builtin.template:
        src: "{{tomcat_service_local}}"
        dest: "{{ tomcat_service_file }}"  
      notify:
        - Make sure a service is running   
    - name: copy the users credentials
      ansible.builtin.copy:
        src: files/tomcat-users.xml
        dest: "{{ tomcat_users_login_info }}" 
    - name: manager web interface login
      ansible.builtin.copy:
        src: files/manager.context.xml
        dest: "{{ tomcat_manager_context }}" 
    - name: host-manager web interface login
      ansible.builtin.copy:
        src: files/manager.context.xml
        dest: "{{ tomcat_host_manager_context }}"              
  handlers:      
    - name: Make sure a service is running
      ansible.builtin.systemd:
        state: started
        name: tomcat
        daemon_reload: yes


     